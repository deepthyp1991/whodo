DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS topics CASCADE;
DROP TABLE IF EXISTS user_topics CASCADE;
DROP TABLE IF EXISTS questions CASCADE;
DROP TABLE IF EXISTS answer_questions CASCADE;
DROP TABLE IF EXISTS question_topics CASCADE;
CREATE TABLE users(id SERIAL PRIMARY KEY,name VARCHAR(255) NOT NULL,last_name VARCHAR(255) NOT NULL,birth_date DATE NOT NULL,gender VARCHAR(255) NOT NULL,email VARCHAR(255) NOT NULL,password VARCHAR(255) NOT NULL,profile_pic VARCHAR(255),country VARCHAR(255) NOT NULL,region VARCHAR(255) NOT NULL,city VARCHAR(255) NOT NULL,referrer VARCHAR(255),type VARCHAR(255) NOT NULL,relationship VARCHAR(255) NOT NULL,family VARCHAR(255) NOT NULL);
CREATE TABLE topics(id SERIAL PRIMARY KEY,topic VARCHAR(255) NOT NULL);
CREATE TABLE user_topics(id SERIAL PRIMARY KEY,user_id INTEGER REFERENCES users(id) ON DELETE CASCADE, topic_id INTEGER REFERENCES topics(id) ON DELETE CASCADE);
CREATE TABLE questions(id SERIAL PRIMARY KEY,topic_id INTEGER REFERENCES topics(id) ON DELETE CASCADE,creator_id INTEGER REFERENCES users(id) ON DELETE CASCADE,question VARCHAR(80) NOT NULL,time timestamp NOT NULL,approved BOOLEAN NOT NULL);
CREATE TABLE answer_questions(id SERIAL PRIMARY KEY,question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,answer SMALLINT NOT NULL,date timestamp NOT NULL);
CREATE TABLE question_topics(id SERIAL PRIMARY KEY,question_id INTEGER REFERENCES questions(id) ON DELETE CASCADE,topic_id INTEGER REFERENCES topics(id) ON DELETE CASCADE);